@namespace BlazorActiveXControls
@using BlazorActiveXControls

<form class="form-control-sm p-4">
    <h3 class="mb-3">Hybrid Blazor App</h3>
    <div class="mb-3">
        <label class="form-label">User Data:</label>
        <input class="form-control" readonly value=" @MainFormContext.UserDataPath" />
    </div>
    <div class="mb-3">     
        <label class="form-label">  Browser Execution Path:</label>
        <input class="form-control" readonly value="@MainFormContext.BrowserExecutionPath" />
    </div>
    <div class="mb-3">
        <label class="form-label">Index file:</label>
        <input class="form-control" readonly value="@MainFormContext.IndexFile" />
    </div>
    <div class="mb-3">
        <label class="form-label">New message:</label>
    <input class="form-control" @bind-value="NewMessage" ></input>
    </div>
    <button type="button" class="btn btn-primary" @onclick="ClickHandler">Blazor Click</button>
</form>

@code {

    [Inject]
    private MainForm MainFormContext { get; set; }

    public string NewMessage { get; set; } = String.Empty;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        MainFormContext.MessageChanged += MainFormContext_MessasgeChanged;
    }

    public void ClickHandler()
    {
        MainFormContext.Message = NewMessage;
    }

    public async void  MainFormContext_MessasgeChanged(string message)
    {
        await InvokeAsync(() =>
        {
            NewMessage = message;
            StateHasChanged();
        });

    }
}
